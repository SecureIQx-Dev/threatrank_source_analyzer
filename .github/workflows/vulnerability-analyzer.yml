name: Vulnerability Analyzer

env:
  REPO_USER: SecureIQx-Dev
  REPO_NAME: threatrank_source_analyzer

on:
  workflow_call:
    inputs:
      repo_path:
        type: string
        description: "Path to analyze"
        required: true
        default: "."
      cvss_lower_bound:
        type: string
        description: "CVSS lower bound"
        required: false
        default: "HIGH"
      epss_percentile_lower_bound:
        type: string
        description: "EPSS percentile lower bound"
        required: false
        default: "0.00"
    secrets:
      pat:
        description: "Personal Access Token"
        required: true
      gemini_api_key:
        description: "Gemini API Key"
        required: false
      license_key:
        description: "Vulnerability Analyzer License Key"
        required: true

jobs:
  threatrank_analysis:
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v2
        with:
          path: ${{ github.event.repository.name }}

      - name: ThreatRank-Step-1
        uses: actions/checkout@v4
        with:
          repository: ${{ env.REPO_USER }}/${{ env.REPO_NAME }}
          ref: main
          path: ./${{ env.REPO_NAME }}
          token: ${{ secrets.pat }}
          lfs: true

      - name: ThreatRank-Step-2
        run: mkdir -p ./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer/artifacts
        
      - name: ThreatRank-Step-3
        run: |
          curl -sSfL https://raw.githubusercontent.com/aquasecurity/trivy/main/contrib/install.sh | sh -s -- -b /usr/local/bin
          trivy repo --format cyclonedx --output "./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer/artifacts/${{ github.event.repository.name }}.json" ${{ github.event.repository.name }}

      - name: ThreatRank-Step-4
        run: |
          trivy repo ${{ github.event.repository.name }} --format json --output "./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer/artifacts/${{ github.event.repository.name }}.json"

      - name: ThreatRank-Step-5
        working-directory: ./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer
        env:
          LICENSE_KEY: ${{ secrets.license_key }}
        run: |
          chmod -R 777 ./utils/vulnerability_analyzer_pro
          # python -m utils.vulnerability_analyzer_pro create_cve_list "artifacts/${{ github.event.repository.name }}"
          ./utils/vulnerability_analyzer_pro create_cve_list "artifacts/${{ github.event.repository.name }}" "${LICENSE_KEY}"

      - name: ThreatRank-Step-6
        run: mkdir -p ./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer/artifacts/output-dir

      - name: ThreatRank-Step-7
        working-directory: ./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer
        run: |
          cat << 'EOF' > run_grep.sh
          #!/bin/bash
          query="$1"
          dir_name="$2"
          grep -ri "$query" --include=*.{py,js,ts,java,cpp,h,c,cs,php,rb,sh,go,rs,swift,kotlin,html,css,xml,yml,json,yaml,toml,sql,pl,pm,r,lua} "$dir_name" > artifacts/output-dir/temp_grep_results.txt
          EOF

          chmod +x run_grep.sh
          chmod -R 777 artifacts

          pwd
          ls -al

      - name: ThreatRank-Step-8 [TIME ESTIMATE HERE]
        working-directory: ./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer
        env:
          EPSS_PERCENTILE_LOWER_BOUND: ${{ inputs.epss_percentile_lower_bound }}
          CVSS_LOWER_BOUND: ${{ inputs.cvss_lower_bound}}
          LICENSE_KEY: ${{ secrets.license_key }}
        run: |
          # python -m utils.vulnerability_analyzer_pro clean_cve_list "${CVSS_LOWER_BOUND}" "${EPSS_PERCENTILE_LOWER_BOUND}"
          ./utils/vulnerability_analyzer_pro clean_cve_list "${CVSS_LOWER_BOUND}" "${EPSS_PERCENTILE_LOWER_BOUND}" "${LICENSE_KEY}"

      - name: ThreatRank-Step-9 [MAIN ANALYSIS STEP]
        working-directory: ./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer
        env:
          GEMINI_API_KEY: ${{ secrets.gemini_api_key }}
          REPO_PATH: "/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/${{ github.event.repository.name }}"
          ROOT_PATH: "/home/runner/work/${{ github.event.repository.name }}/${{ github.event.repository.name }}/${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer"
          LICENSE_KEY: ${{ secrets.license_key }}
        run: |
          ./utils/vulnerability_analyzer_pro run_analysis "${REPO_PATH}" "${ROOT_PATH}" "${LICENSE_KEY}" "${GEMINI_API_KEY}"

      - name: ThreatRank-Step-10
        working-directory: ./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer
        env:
          LICENSE_KEY: ${{ secrets.license_key }}
        run: |
          # python -m utils.vulnerability_analyzer_pro run_cleanup
          ./utils/vulnerability_analyzer_pro run_cleanup "${LICENSE_KEY}"

      - name: ThreatRank-Step-11
        uses: actions/upload-artifact@v4
        with:
          name: "[${{ github.event.repository.name }}]-threatrank-output"
          path: ./${{ env.REPO_NAME }}/.github/workflows/vulnerability-analyzer/artifacts/output-dir/final-threatrank-analysis-*.csv
          if-no-files-found: error